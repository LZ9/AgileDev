apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.lodz.android.agiledev"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
    }

    //日志开关
    def LOG_DEBUG = "LOG_DEBUG"
    defaultConfig {
        buildConfigField "boolean", LOG_DEBUG, "true"
    }

    // 程序在编译的时候会检查lint，有任何错误提示会停止build，我们可以关闭这个开关
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    buildTypes {

        debug {//debug版本的配置
            minifyEnabled false // 是否进行混淆
            zipAlignEnabled false // 是否支持zip
            debuggable true // 是否支持调试
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", LOG_DEBUG, "false"
            minifyEnabled false // 是否进行混淆
            zipAlignEnabled true // 是否支持zip
            debuggable false // 是否支持调试
            jniDebuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def apk = output.outputFile
            def newName
            if (variant.baseName.endsWith('release')) {
                def formattedDate = new Date().format('yyyyMMddHHmm')
                newName = "AgileDev-v" + defaultConfig.versionName + "-" + variant.baseName + "-" + formattedDate + ".apk"
            } else {
                newName = "AgileDev-v" + defaultConfig.versionName + "-" + variant.baseName + ".apk"
            }
            output.outputFile = new File(apk.parentFile, newName);
        }
    }

}

dependencies {
    compile project(':component')
    compile 'cn.lodz:ImagerLoader:1.0.1'


    // 权限申请
    compile 'com.github.hotchemi:permissionsdispatcher:2.3.1'
    annotationProcessor 'com.github.hotchemi:permissionsdispatcher-processor:2.3.1'
}
