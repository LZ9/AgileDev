apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.lodz.android.agiledev"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled = true// 启用dex分包
//        ndk {
//            abiFilters "armeabi"
//        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //日志开关
    def LOG_DEBUG = "LOG_DEBUG"
    defaultConfig {
        buildConfigField "boolean", LOG_DEBUG, "true"
    }

    // 程序在编译的时候会检查lint，有任何错误提示会停止build，我们可以关闭这个开关
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    buildTypes {

        debug {//debug版本的配置
            minifyEnabled false // 是否进行混淆
            zipAlignEnabled false // 是否支持zip
            debuggable true // 是否支持调试
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField "boolean", LOG_DEBUG, "false"
            minifyEnabled false // 是否进行混淆
            zipAlignEnabled true // 是否支持zip
            debuggable false // 是否支持调试
            jniDebuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def newName
            if (variant.baseName.endsWith('release')) {
                def formattedDate = new Date().format('yyyyMMddHHmm')
                newName = "AgileDev-v" + defaultConfig.versionName + "-" + variant.baseName + "-" + formattedDate + ".apk"
            } else {
                newName = "AgileDev-v" + defaultConfig.versionName + "-" + variant.baseName + ".apk"
            }
            outputFileName = newName
        }
    }

}

dependencies {
    implementation project(':component')
    implementation project(':imageloader')

    // 权限申请
    implementation "com.github.permissions-dispatcher:permissionsdispatcher:4.8.0"
    annotationProcessor "com.github.permissions-dispatcher:permissionsdispatcher-processor:4.8.0"

    // butterknife
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'

    // 下载
//    implementation 'zlc.season:rxdownload3:1.2.7'
    implementation files('libs/rxdownload3-1.2.7.aar')
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation "com.squareup.retrofit2:converter-gson:2.6.1"
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.6.1"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.5.21"

    // leakcanary
//    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.1'
//    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'

}
